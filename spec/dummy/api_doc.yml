---
openapi: 3.0.0
info:
  title: Sample API
  description: Optional multiline or single-line description in [CommonMark](http://commonmark.org/help/)
    or HTML.
  version: 0.1.9
security:
- json_web_token: []
components:
  securitySchemes:
    basic_auth:
      type: http
      scheme: basic
    json_web_token:
      type: http
      scheme: bearer
      bearerFormat: jwt
    api_key:
      type: apiKey
      in: header
      name: API_KEY_HEADER
    open_id:
      type: openIdConnect
      openIdConnectUrl: https://example.com/.well-known/openid-configuration
paths:
  "/owners":
    get:
      description: owners index
      parameters:
      - in: path
        required: true
        name: id
        description: Id of Owner
        schema:
          type: integer
      responses:
        '200':
          description: success
          content:
            text/plain: {}
      security: []
    post:
      description: owners create
      parameters:
      - in: path
        required: true
        name: id
        description: Id of Owner
        schema:
          type: integer
      responses:
        '200':
          description: success
          content:
            text/plain: {}
  "/owners/new":
    get:
      description: owners new
      parameters:
      - in: path
        required: true
        name: id
        description: Id of Owner
        schema:
          type: integer
      responses:
        '200':
          description: success
          content:
            text/plain: {}
  "/owners/{id}/edit":
    get:
      description: owners edit
      parameters:
      - in: path
        required: true
        name: id
        description: Id of Owner
        schema:
          type: integer
      responses:
        '200':
          description: success
          content:
            text/plain: {}
  "/owners/{id}":
    get:
      description: owners show
      parameters:
      - in: path
        required: true
        name: id
        description: Id of Owner
        schema:
          type: integer
      responses:
        '200':
          description: success
          content:
            text/plain: {}
    patch:
      description: owners update
      parameters:
      - in: path
        required: true
        name: id
        description: Id of Owner
        schema:
          type: integer
      responses:
        '200':
          description: success
          content:
            text/plain: {}
    put:
      description: owners update
      parameters:
      - in: path
        required: true
        name: id
        description: Id of Owner
        schema:
          type: integer
      responses:
        '200':
          description: success
          content:
            text/plain: {}
    delete:
      description: owners destroy
      parameters:
      - in: path
        required: true
        name: id
        description: Id of Owner
        schema:
          type: integer
      responses:
        '200':
          description: success
          content:
            text/plain: {}
  "/pets":
    get:
      description: |
        returns a list of all pets
        that are stored in the database
      parameters:
      - in: path
        required: true
        name: id
        description: Id of Pet
        schema:
          type: integer
      - in: query
        name: page
        required: false
        description: Page number for pagination
        schema:
          type: integer
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                  properties:
                    id:
                      type: integer
                    name:
                      type: string
                      description: name of pet
                      pattern: "[\\w\\d]+"
                    age:
                      type: integer
                      description: Age of Pet
                      minimum: 0
                      maximum: 20
                    created_at:
                      type: string
                      format: date-time
                    updated_at:
                      type: string
                      format: date-time
          description: json array of pets
      security: []
    post:
      description: pets create
      parameters:
      - in: path
        required: true
        name: id
        description: Id of Pet
        schema:
          type: integer
      responses:
        '200':
          description: success
          content:
            application/json: {}
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                pet:
                  type: object
                  properties:
                    id:
                      type: integer
                    name:
                      type: string
                      description: name of pet
                      pattern: "[\\w\\d]+"
                    age:
                      type: integer
                      description: Age of Pet
                      minimum: 0
                      maximum: 20
                    created_at:
                      type: string
                      format: date-time
                    updated_at:
                      type: string
                      format: date-time
  "/pets/new":
    get:
      description: pets new
      parameters:
      - in: path
        required: true
        name: id
        description: Id of Pet
        schema:
          type: integer
      responses:
        '423':
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: object
                    properties:
                      id:
                        type: integer
                      name:
                        type: string
                        description: name of pet
                        pattern: "[\\w\\d]+"
                      age:
                        type: integer
                        description: Age of Pet
                        minimum: 0
                        maximum: 20
                      created_at:
                        type: string
                        format: date-time
                      updated_at:
                        type: string
                        format: date-time
                  other_stuff:
                    type: object
                    properties:
                      page:
                        type: string
                      some_more:
                        type: string
          description: json object containing pet and pagination data
  "/pets/{id}/edit":
    get:
      description: pets edit
      parameters:
      - in: path
        required: true
        name: id
        description: Id of Pet
        schema:
          type: integer
      responses:
        '200':
          description: success
          content:
            application/json: {}
  "/pets/{id}":
    get:
      description: pets show
      parameters:
      - in: path
        required: true
        name: id
        description: Id of Pet
        schema:
          type: integer
      responses:
        '200':
          content:
            application/json:
              schema:
                type: object
                properties:
                  id:
                    type: integer
                  name:
                    type: string
                    description: name of pet
                    pattern: "[\\w\\d]+"
                  age:
                    type: integer
                    description: Age of Pet
                    minimum: 0
                    maximum: 20
                  created_at:
                    type: string
                    format: date-time
                  updated_at:
                    type: string
                    format: date-time
          description: json object representing the pet
    patch:
      description: pets update
      parameters:
      - in: path
        required: true
        name: id
        description: Id of Pet
        schema:
          type: integer
      responses:
        '200':
          description: success
          content:
            application/json: {}
    put:
      description: pets update
      parameters:
      - in: path
        required: true
        name: id
        description: Id of Pet
        schema:
          type: integer
      responses:
        '200':
          description: success
          content:
            application/json: {}
    delete:
      description: pets destroy
      parameters:
      - in: path
        required: true
        name: id
        description: Id of Pet
        schema:
          type: integer
      responses:
        '200':
          description: success
          content:
            application/json: {}
  "/":
    get:
      description: welcome index
      responses:
        '200':
          description: success
          content:
            text/html: {}
